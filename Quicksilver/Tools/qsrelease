#!/bin/sh

set -euf

TOOLSDIR=$(cd "$(dirname "$0")" && pwd)

# Default to x86_64 for CI builds
if [ -n "${CI:-}" ]; then
  CURRENT_ARCH=x86_64
else
  CURRENT_ARCH=$(arch)
fi

## Quicksilver Release build
## Cache settings to save time
SETTINGS=/tmp/qs_build_settings
xcodebuild \
  -destination generic/platform=macos \
  -configuration Release \
  -scheme 'Quicksilver Distribution' \
  -showBuildSettings |
  sort -u > "${SETTINGS}"

SOURCE_ROOT=$(awk '$1 == "SOURCE_ROOT" { print $NF }' < "${SETTINGS}")
BUILT_PRODUCTS_DIR=$(awk '$1 == "BUILT_PRODUCTS_DIR" { print $NF }' < "${SETTINGS}")

## Create the directory (for logging purposes)
mkdir -p "${BUILT_PRODUCTS_DIR}"
LOG=${BUILT_PRODUCTS_DIR}/build.log
DMG_TEMP=${BUILT_PRODUCTS_DIR}/dmg

## Clean and Build
## (This could be done with a single command, but if `clean` fails, the
## exit status won't be 0. It usually fails because something didn't exist
## in the first place. We don't care.)
{
  xcodebuild \
    -destination generic/platform=macos \
    -configuration Release \
    -scheme 'Quicksilver Distribution' \
    clean || true

  # TODO: https://github.com/quicksilver/Quicksilver/issues/2583
  xcodebuild \
    -destination "platform=macOS,arch=${CURRENT_ARCH}" \
    -configuration Release \
    -scheme 'Quicksilver Distribution' \
    test || true

  xcodebuild \
    -destination generic/platform=macos \
    -configuration Release \
    -scheme 'Quicksilver Distribution' \
    build
} > "${LOG}"

## Build succeeded
cd "${BUILT_PRODUCTS_DIR}"

## Set the correct plist permissions
chmod 644 Quicksilver.app/Contents/Info.plist

## Prepare the DMG directory
mkdir -p "${DMG_TEMP}"

cd "${DMG_TEMP}"

cp -a ../Quicksilver.app .
cp "${SOURCE_ROOT}"/Resources/DMG_DS_Store ./.DS_Store
ln -sf /Applications .
cp "${SOURCE_ROOT}"/Resources/Images/QuicksilverDMG.icns ./.VolumeIcon.icns

if [ -n "${QS_BUILD_ONLY=}" ]; then
  cd ..

  echo "Skipping codesigning and using an ad-hoc signature for local testing instead"
  codesign --deep --force --sign "-" Quicksilver.app

  echo "Creating a zip build artifact for uploading."
  ditto -c -k --keepParent Quicksilver.app Quicksilver.zip

  exit 0
fi

"${TOOLSDIR}"/qssign

# Clean up settings if all went well
rm -f "${SETTINGS}"
